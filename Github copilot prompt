# ## Instruksjoner for GitHub Copilot: Generer en komplett README.md-fil.
#
# M√ÖL: Skriv en profesjonell, teknisk og veiledende README.md for et GitHub-repositorium som heter "prototype-workflow-med-github".
# KONSEPT: Filen skal v√¶re en A-til-√Ö guide og bl√•kopi for et helautomatisert system som tar et CAD-design til et publisert produkt i Shopify, ved hjelp av MinIO for fillagring.
# STRUKTUR: F√∏lg strukturen under n√∏yaktig, med de spesifiserte titlene og innholdspunktene.

# --- START P√Ö FIL ---

# 1. HOVEDTITTEL OG INTRODUKSJON
# Start med hovedtittelen: "# Komplett Guide for Automatisert CAD til E-handel med MinIO"
# Skriv en kort introduksjon som forklarer at dette dokumentet er en komplett guide for et automatisert system for CAD-design, fra id√© til publisering i Shopify.
# Nevn at systemet bruker MinIO for lagring og GitHub som "Single Source of Truth".

# 2. INNHOLDSFORTEGNELSE
# Lag en nummerert innholdsfortegnelse med 7 hoveddeler:
# 1. Systemarkitektur: En oversikt
# 2. Del 1: Grunnoppsett av Server
# 3. Del 2: Konfigurasjon av Versjonskontroll
# 4. Del 3: Shopify-integrasjon
# 5. Del 4: Arbeidsflyt i Praksis
# 6. Del 5: Fremtidsplaner og Utvidelser
# 7. Del 6: Arkivering til Kunnskapsbase (Docmost)

# 3. SEKSJON 1: SYSTEMARKITEKTUR
# Lag en H2-tittel: "## 1. Systemarkitektur: En oversikt üèóÔ∏è"
# Forklar systemet med en punktliste. Dekk f√∏lgende punkter:
# - Kjerne: Linux-server.
# - Lagring: MinIO med versjonering, datasikkerhet og API-tilgang.
# - Nettverk: Tailscale for et sikkert, privat nettverk.
# - Versjonskontroll: Git og GitHub, hvor .gitignore ekskluderer store filer og kun metadata spores.
# - Integrasjon: Python-skript som limer alt sammen.

# 4. SEKSJON 2: SERVEROPPSETT
# Lag en H2-tittel: "## 2. Del 1: Grunnoppsett av Server üêß"
# Lag tre H4-undertitler:
# - "2.1. Installasjon av Programvare": Inkluder en bash-kodeblokk for `apt update` og installasjon av `git`, `python3`, `python3-pip`. Inkluder ogs√• en `pip3 install`-kommando for `watchdog`, `ShopifyAPI`, `PyGithub`, og `minio`.
# - "2.2. Oppsett av MinIO (Objektlagring)": Beskriv stegene: installer MinIO server, start den som en tjeneste, opprett en bucket kalt "cad-projects", og aktiver versjonering.
# - "2.3. Sikker Tilgang (Tailscale)": Forklar kort hvordan man installerer og starter Tailscale p√• server og klienter.

# 5. SEKSJON 3: VERSJONSKONTROLL
# Lag en H2-tittel: "## 3. Del 2: Konfigurasjon av Versjonskontroll üîÑ"
# Lag to H4-undertitler:
# - "3.1. Git & SSH-oppsett": Forklar hvordan man genererer en SSH-n√∏kkel p√• serveren og legger den til p√• GitHub.
# - "3.2. Automatisering av Fillogg (watcher.py)": Forklar at et Python-skript m√• konfigureres til √• lytte p√• MinIO-hendelser (via webhooks) og deretter oppdatere en `fil-logg.md` i det relevante GitHub-repoet.

# 6. SEKSJON 4: SHOPIFY-INTEGRASJON
# Lag en H2-tittel: "## 4. Del 3: Shopify-integrasjon üõí"
# Lag to H4-undertitler:
# - "4.1. API-tilganger": List opp de tre n√∏dvendige API-tilgangene: Shopify (Privat App), GitHub (Personal Access Token), og MinIO (Access/Secret Key).
# - "4.2. Skriptene: Import og Publiser": Beskriv de to Python-skriptene (`importer_fra_shopify.py` og `publiser_til_shopify.py`) og deres form√•l.

# 7. SEKSJON 5: ARBEIDSFLYT
# Lag en H2-tittel: "## 5. Del 4: Arbeidsflyt i Praksis ‚öôÔ∏è"
# Lag to H4-undertitler:
# - "5.1. √ângangsimport: F√• oversikt over gamle design": Forklar at man kj√∏rer import-skriptet for √• bygge arkivet.
# - "5.2. Daglig bruk: Fra nytt design til publisert produkt": List opp stegene: Opprett Git-repo, legg til `gitignore` og `product.json`, last opp CAD-filer til MinIO, push metadata til GitHub, og kj√∏r publiseringsskriptet.

# 8. SEKSJON 6: FREMTIDSPLANER
# Lag en H2-tittel: "## 6. Del 5: Fremtidsplaner og Utvidelser üöÄ"
# List opp potensielle utvidelser: Webhooks for sanntidspublisering, Fusion 360 Add-in, og Lagerstyring.

# 9. SEKSJON 7: DOCMOST ARKIVERING
# Lag en H2-tittel: "## 7. Del 6: Arkivering til Kunnskapsbase (Docmost) üìö"
# Forklar rollene: GitHub er "verkstedet", mens Docmost er det ferdige "biblioteket".
# Beskriv overf√∏ringsprosessen: Samle dokumentasjon, opprett struktur i Docmost, lim inn Markdown, last opp endelige filer, og lenk tilbake til GitHub.

# --- SLUTT P√Ö FIL ---
